package com.imory.cn.company.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CompanyTransferExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public CompanyTransferExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNull() {
            addCriterion("fileId is null");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNotNull() {
            addCriterion("fileId is not null");
            return (Criteria) this;
        }

        public Criteria andFileIdEqualTo(Integer value) {
            addCriterion("fileId =", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotEqualTo(Integer value) {
            addCriterion("fileId <>", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThan(Integer value) {
            addCriterion("fileId >", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("fileId >=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThan(Integer value) {
            addCriterion("fileId <", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThanOrEqualTo(Integer value) {
            addCriterion("fileId <=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdIn(List<Integer> values) {
            addCriterion("fileId in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotIn(List<Integer> values) {
            addCriterion("fileId not in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdBetween(Integer value1, Integer value2) {
            addCriterion("fileId between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotBetween(Integer value1, Integer value2) {
            addCriterion("fileId not between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumIsNull() {
            addCriterion("recentlyNum is null");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumIsNotNull() {
            addCriterion("recentlyNum is not null");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumEqualTo(Double value) {
            addCriterion("recentlyNum =", value, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumNotEqualTo(Double value) {
            addCriterion("recentlyNum <>", value, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumGreaterThan(Double value) {
            addCriterion("recentlyNum >", value, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumGreaterThanOrEqualTo(Double value) {
            addCriterion("recentlyNum >=", value, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumLessThan(Double value) {
            addCriterion("recentlyNum <", value, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumLessThanOrEqualTo(Double value) {
            addCriterion("recentlyNum <=", value, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumIn(List<Double> values) {
            addCriterion("recentlyNum in", values, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumNotIn(List<Double> values) {
            addCriterion("recentlyNum not in", values, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumBetween(Double value1, Double value2) {
            addCriterion("recentlyNum between", value1, value2, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyNumNotBetween(Double value1, Double value2) {
            addCriterion("recentlyNum not between", value1, value2, "recentlyNum");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionIsNull() {
            addCriterion("recentlyDirection is null");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionIsNotNull() {
            addCriterion("recentlyDirection is not null");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionEqualTo(String value) {
            addCriterion("recentlyDirection =", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionNotEqualTo(String value) {
            addCriterion("recentlyDirection <>", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionGreaterThan(String value) {
            addCriterion("recentlyDirection >", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionGreaterThanOrEqualTo(String value) {
            addCriterion("recentlyDirection >=", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionLessThan(String value) {
            addCriterion("recentlyDirection <", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionLessThanOrEqualTo(String value) {
            addCriterion("recentlyDirection <=", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionLike(String value) {
            addCriterion("recentlyDirection like", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionNotLike(String value) {
            addCriterion("recentlyDirection not like", value, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionIn(List<String> values) {
            addCriterion("recentlyDirection in", values, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionNotIn(List<String> values) {
            addCriterion("recentlyDirection not in", values, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionBetween(String value1, String value2) {
            addCriterion("recentlyDirection between", value1, value2, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDirectionNotBetween(String value1, String value2) {
            addCriterion("recentlyDirection not between", value1, value2, "recentlyDirection");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateIsNull() {
            addCriterion("recentlyDate is null");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateIsNotNull() {
            addCriterion("recentlyDate is not null");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateEqualTo(String value) {
            addCriterion("recentlyDate =", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateNotEqualTo(String value) {
            addCriterion("recentlyDate <>", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateGreaterThan(String value) {
            addCriterion("recentlyDate >", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateGreaterThanOrEqualTo(String value) {
            addCriterion("recentlyDate >=", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateLessThan(String value) {
            addCriterion("recentlyDate <", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateLessThanOrEqualTo(String value) {
            addCriterion("recentlyDate <=", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateLike(String value) {
            addCriterion("recentlyDate like", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateNotLike(String value) {
            addCriterion("recentlyDate not like", value, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateIn(List<String> values) {
            addCriterion("recentlyDate in", values, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateNotIn(List<String> values) {
            addCriterion("recentlyDate not in", values, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateBetween(String value1, String value2) {
            addCriterion("recentlyDate between", value1, value2, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andRecentlyDateNotBetween(String value1, String value2) {
            addCriterion("recentlyDate not between", value1, value2, "recentlyDate");
            return (Criteria) this;
        }

        public Criteria andYearNumIsNull() {
            addCriterion("yearNum is null");
            return (Criteria) this;
        }

        public Criteria andYearNumIsNotNull() {
            addCriterion("yearNum is not null");
            return (Criteria) this;
        }

        public Criteria andYearNumEqualTo(Double value) {
            addCriterion("yearNum =", value, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumNotEqualTo(Double value) {
            addCriterion("yearNum <>", value, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumGreaterThan(Double value) {
            addCriterion("yearNum >", value, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumGreaterThanOrEqualTo(Double value) {
            addCriterion("yearNum >=", value, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumLessThan(Double value) {
            addCriterion("yearNum <", value, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumLessThanOrEqualTo(Double value) {
            addCriterion("yearNum <=", value, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumIn(List<Double> values) {
            addCriterion("yearNum in", values, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumNotIn(List<Double> values) {
            addCriterion("yearNum not in", values, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumBetween(Double value1, Double value2) {
            addCriterion("yearNum between", value1, value2, "yearNum");
            return (Criteria) this;
        }

        public Criteria andYearNumNotBetween(Double value1, Double value2) {
            addCriterion("yearNum not between", value1, value2, "yearNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumIsNull() {
            addCriterion("repertoryNum is null");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumIsNotNull() {
            addCriterion("repertoryNum is not null");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumEqualTo(Double value) {
            addCriterion("repertoryNum =", value, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumNotEqualTo(Double value) {
            addCriterion("repertoryNum <>", value, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumGreaterThan(Double value) {
            addCriterion("repertoryNum >", value, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumGreaterThanOrEqualTo(Double value) {
            addCriterion("repertoryNum >=", value, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumLessThan(Double value) {
            addCriterion("repertoryNum <", value, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumLessThanOrEqualTo(Double value) {
            addCriterion("repertoryNum <=", value, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumIn(List<Double> values) {
            addCriterion("repertoryNum in", values, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumNotIn(List<Double> values) {
            addCriterion("repertoryNum not in", values, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumBetween(Double value1, Double value2) {
            addCriterion("repertoryNum between", value1, value2, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andRepertoryNumNotBetween(Double value1, Double value2) {
            addCriterion("repertoryNum not between", value1, value2, "repertoryNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumIsNull() {
            addCriterion("orderNum is null");
            return (Criteria) this;
        }

        public Criteria andOrderNumIsNotNull() {
            addCriterion("orderNum is not null");
            return (Criteria) this;
        }

        public Criteria andOrderNumEqualTo(Integer value) {
            addCriterion("orderNum =", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotEqualTo(Integer value) {
            addCriterion("orderNum <>", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThan(Integer value) {
            addCriterion("orderNum >", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderNum >=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThan(Integer value) {
            addCriterion("orderNum <", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThanOrEqualTo(Integer value) {
            addCriterion("orderNum <=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumIn(List<Integer> values) {
            addCriterion("orderNum in", values, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotIn(List<Integer> values) {
            addCriterion("orderNum not in", values, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumBetween(Integer value1, Integer value2) {
            addCriterion("orderNum between", value1, value2, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotBetween(Integer value1, Integer value2) {
            addCriterion("orderNum not between", value1, value2, "orderNum");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(Integer value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(Integer value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(Integer value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(Integer value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(Integer value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(Integer value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<Integer> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<Integer> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(Integer value1, Integer value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(Integer value1, Integer value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_transfer
     *
     * @mbggenerated do_not_delete_during_merge Sat Dec 23 22:24:56 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_transfer
     *
     * @mbggenerated Sat Dec 23 22:24:56 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}