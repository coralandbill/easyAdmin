package com.imory.cn.user.dao;

import com.imory.cn.user.dto.UserInform;
import com.imory.cn.user.dto.UserInformExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserInformMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @SelectProvider(type=UserInformSqlProvider.class, method="countByExample")
    int countByExample(UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @DeleteProvider(type=UserInformSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @Delete({
        "delete from user_inform",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @Insert({
        "insert into user_inform (companyId, orgaccoId, ",
        "title, content, ",
        "mobile, state, replayContent, ",
        "replayDate, createTime, ",
        "imgUrl)",
        "values (#{companyId,jdbcType=INTEGER}, #{orgaccoId,jdbcType=INTEGER}, ",
        "#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, ",
        "#{mobile,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{replayContent,jdbcType=VARCHAR}, ",
        "#{replayDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{imgUrl,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(UserInform record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @InsertProvider(type=UserInformSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(UserInform record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @SelectProvider(type=UserInformSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="companyId", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="orgaccoId", property="orgaccoId", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="replayContent", property="replayContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="replayDate", property="replayDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="imgUrl", property="imgUrl", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<UserInform> selectByExampleWithBLOBs(UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @SelectProvider(type=UserInformSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="companyId", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="orgaccoId", property="orgaccoId", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="replayContent", property="replayContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="replayDate", property="replayDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserInform> selectByExample(UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @Select({
        "select",
        "id, companyId, orgaccoId, title, content, mobile, state, replayContent, replayDate, ",
        "createTime, imgUrl",
        "from user_inform",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="companyId", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="orgaccoId", property="orgaccoId", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="replayContent", property="replayContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="replayDate", property="replayDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="imgUrl", property="imgUrl", jdbcType=JdbcType.LONGVARCHAR)
    })
    UserInform selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @UpdateProvider(type=UserInformSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserInform record, @Param("example") UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @UpdateProvider(type=UserInformSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") UserInform record, @Param("example") UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @UpdateProvider(type=UserInformSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserInform record, @Param("example") UserInformExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @UpdateProvider(type=UserInformSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserInform record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @Update({
        "update user_inform",
        "set companyId = #{companyId,jdbcType=INTEGER},",
          "orgaccoId = #{orgaccoId,jdbcType=INTEGER},",
          "title = #{title,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "state = #{state,jdbcType=INTEGER},",
          "replayContent = #{replayContent,jdbcType=VARCHAR},",
          "replayDate = #{replayDate,jdbcType=TIMESTAMP},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "imgUrl = #{imgUrl,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(UserInform record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_inform
     *
     * @mbggenerated Sun Jan 07 16:12:52 CST 2018
     */
    @Update({
        "update user_inform",
        "set companyId = #{companyId,jdbcType=INTEGER},",
          "orgaccoId = #{orgaccoId,jdbcType=INTEGER},",
          "title = #{title,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "state = #{state,jdbcType=INTEGER},",
          "replayContent = #{replayContent,jdbcType=VARCHAR},",
          "replayDate = #{replayDate,jdbcType=TIMESTAMP},",
          "createTime = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserInform record);
}